# File generated by CompCert 2.4
# Command line: -stdlib /home/michael/.opam/4.02.1/lib/compcert/ -fstruct-return -dasm -lcompcert -I /home/michael/.opam/4.02.1/share/compcert-bench/raytracer /home/michael/.opam/4.02.1/share/compcert-bench/raytracer/memory.c /home/michael/.opam/4.02.1/share/compcert-bench/raytracer/gmllexer.c /home/michael/.opam/4.02.1/share/compcert-bench/raytracer/gmlparser.c /home/michael/.opam/4.02.1/share/compcert-bench/raytracer/eval.c /home/michael/.opam/4.02.1/share/compcert-bench/raytracer/arrays.c /home/michael/.opam/4.02.1/share/compcert-bench/raytracer/vector.c /home/michael/.opam/4.02.1/share/compcert-bench/raytracer/matrix.c /home/michael/.opam/4.02.1/share/compcert-bench/raytracer/object.c /home/michael/.opam/4.02.1/share/compcert-bench/raytracer/intersect.c /home/michael/.opam/4.02.1/share/compcert-bench/raytracer/surface.c /home/michael/.opam/4.02.1/share/compcert-bench/raytracer/light.c /home/michael/.opam/4.02.1/share/compcert-bench/raytracer/simplify.c /home/michael/.opam/4.02.1/share/compcert-bench/raytracer/render.c /home/michael/.opam/4.02.1/share/compcert-bench/raytracer/main.c -lm
	.section	.rodata
	.align	1
__stringlit_1:
	.ascii	"/home/michael/.opam/4.02.1/share/compcert-bench/raytracer/surface.c\000"
	.type	__stringlit_1, @object
	.size	__stringlit_1, . - __stringlit_1
	.section	.rodata
	.align	1
__stringlit_2:
	.ascii	"0\000"
	.type	__stringlit_2, @object
	.size	__stringlit_2, . - __stringlit_2
	.text
	.align	16
	.globl surface_coords
surface_coords:
	.cfi_startproc
	subl	$132, %esp
	.cfi_adjust_cfa_offset	132
	leal	136(%esp), %edx
	movl	%edx, 16(%esp)
	movl	%ebx, 20(%esp)
	movl	%esi, 24(%esp)
	movl	%edi, 28(%esp)
	movl	%ebp, 32(%esp)
	movl	0(%edx), %eax
	movl	4(%edx), %ecx
	movl	8(%edx), %edi
	movl	12(%edx), %esi
	movl	16(%edx), %ebx
	movl	0(%eax), %eax
	cmpl	$2, %eax
	jae	.L435
	testl	%eax, %eax
	jne	.L436
	movsd	0(%ecx), %xmm4
	movsd	8(%ecx), %xmm7
	movsd	16(%ecx), %xmm3
	movsd	%xmm3, 40(%esp)
	movsd	%xmm7, 56(%esp)
	movsd	%xmm4, 48(%esp)
	movsd	48(%esp), %xmm5
	mulsd	%xmm5, %xmm5
	movsd	40(%esp), %xmm6
	mulsd	%xmm6, %xmm6
	addsd	%xmm6, %xmm5
	movsd	56(%esp), %xmm7
	mulsd	%xmm7, %xmm7
	subsd	%xmm7, %xmm5
	movsd	%xmm5, 0(%esp)
	call	fabs
	fstpl	64(%esp)
	movsd	64(%esp), %xmm6
	movsd	.L437, %xmm2 # 1
	movsd	56(%esp), %xmm4
	movapd	%xmm2, %xmm3
	subsd	%xmm4, %xmm3
	movapd	%xmm3, %xmm4
	mulsd	%xmm4, %xmm3
	comisd	%xmm3, %xmm6
	jbe	.L438
	movl	$1, %eax
	movl	%eax, 0(%edi)
	movsd	48(%esp), %xmm1
	addsd	%xmm2, %xmm1
	movsd	.L439, %xmm7 # 0.5
	mulsd	%xmm7, %xmm1
	movsd	%xmm1, 0(%esi)
	movsd	40(%esp), %xmm5
	addsd	%xmm2, %xmm5
	mulsd	%xmm7, %xmm5
	movsd	%xmm5, 0(%ebx)
	jmp	.L440
.L438:
	xorl	%edx, %edx
	movl	%edx, 0(%edi)
	movsd	48(%esp), %xmm3
	movsd	%xmm3, 0(%esp)
	movsd	40(%esp), %xmm3
	movsd	%xmm3, 8(%esp)
	call	atan2
	fstpl	40(%esp)
	movsd	40(%esp), %xmm4
	movsd	.L441, %xmm6 # 1
	movsd	.L442, %xmm5 # 0.159154943091895346
	mulsd	%xmm5, %xmm4
	xorpd	%xmm0, %xmm0
	comisd	%xmm4, %xmm0
	jbe	.L443
	addsd	%xmm6, %xmm4
.L443:
	movsd	%xmm4, 0(%esi)
	movsd	56(%esp), %xmm1
	movsd	%xmm1, 0(%ebx)
	jmp	.L440
.L436:
	movsd	0(%ecx), %xmm7
	movsd	8(%ecx), %xmm6
	movsd	16(%ecx), %xmm4
	movsd	%xmm4, 40(%esp)
	movsd	%xmm6, 48(%esp)
	movsd	%xmm7, 56(%esp)
	movsd	40(%esp), %xmm4
	movsd	%xmm4, 0(%esp)
	call	fabs
	fstpl	64(%esp)
	movsd	64(%esp), %xmm7
	movsd	%xmm7, 80(%esp)
	movsd	.L444, %xmm2 # 1
	movsd	40(%esp), %xmm7
	subsd	%xmm7, %xmm2
	movsd	%xmm2, 0(%esp)
	call	fabs
	fstpl	64(%esp)
	movsd	64(%esp), %xmm0
	movsd	%xmm0, 88(%esp)
	movsd	56(%esp), %xmm0
	movsd	%xmm0, 0(%esp)
	call	fabs
	fstpl	64(%esp)
	movsd	64(%esp), %xmm1
	movsd	%xmm1, 96(%esp)
	movsd	.L445, %xmm1 # 1
	movsd	56(%esp), %xmm0
	subsd	%xmm0, %xmm1
	movsd	%xmm1, 0(%esp)
	call	fabs
	fstpl	64(%esp)
	movsd	64(%esp), %xmm4
	movsd	%xmm4, 104(%esp)
	movsd	48(%esp), %xmm2
	movsd	%xmm2, 0(%esp)
	call	fabs
	fstpl	64(%esp)
	movsd	64(%esp), %xmm4
	movsd	%xmm4, 112(%esp)
	movsd	.L446, %xmm5 # 1
	movsd	48(%esp), %xmm0
	subsd	%xmm0, %xmm5
	movsd	%xmm5, 0(%esp)
	call	fabs
	fstpl	64(%esp)
	movsd	64(%esp), %xmm6
	movsd	%xmm6, 120(%esp)
	xorl	%eax, %eax
	movsd	80(%esp), %xmm0
	movl	$1, %ecx
.L447:
	leal	80(%esp), %edx
	movsd	0(%edx,%ecx,8), %xmm7
	comisd	%xmm7, %xmm0
	jbe	.L448
	movapd	%xmm7, %xmm0
	movl	%ecx, %eax
.L448:
	leal	1(%ecx), %ecx
	cmpl	$6, %ecx
	jl	.L447
	movl	%eax, 0(%edi)
	cmpl	$3, %eax
	jae	.L449
	testl	%eax, %eax
	je	.L450
	cmpl	$1, %eax
	jne	.L451
.L450:
	movsd	56(%esp), %xmm3
	movsd	%xmm3, 0(%esi)
	movsd	48(%esp), %xmm5
	movsd	%xmm5, 0(%ebx)
	jmp	.L440
.L449:
	cmpl	$3, %eax
	je	.L451
	cmpl	$4, %eax
	je	.L452
	cmpl	$5, %eax
	jne	.L440
.L452:
	movsd	56(%esp), %xmm1
	movsd	%xmm1, 0(%esi)
	movsd	40(%esp), %xmm6
	movsd	%xmm6, 0(%ebx)
	jmp	.L440
.L451:
	movsd	40(%esp), %xmm2
	movsd	%xmm2, 0(%esi)
	movsd	48(%esp), %xmm6
	movsd	%xmm6, 0(%ebx)
	jmp	.L440
.L435:
	cmpl	$2, %eax
	je	.L453
	cmpl	$3, %eax
	je	.L454
	cmpl	$4, %eax
	jne	.L455
	movsd	0(%ecx), %xmm3
	movsd	8(%ecx), %xmm1
	movsd	16(%ecx), %xmm4
	movsd	%xmm1, 40(%esp)
	xorl	%eax, %eax
	movl	%eax, 0(%edi)
	movsd	%xmm3, 0(%esp)
	movsd	%xmm4, 8(%esp)
	call	atan2
	fstpl	48(%esp)
	movsd	48(%esp), %xmm5
	movsd	.L456, %xmm7 # 1
	movsd	.L457, %xmm1 # 0.159154943091895346
	mulsd	%xmm1, %xmm5
	xorpd	%xmm6, %xmm6
	comisd	%xmm5, %xmm6
	jbe	.L458
	addsd	%xmm7, %xmm5
.L458:
	movsd	%xmm5, 0(%esi)
	movsd	.L459, %xmm2 # 1
	movsd	40(%esp), %xmm6
	addsd	%xmm2, %xmm6
	movsd	.L460, %xmm5 # 0.5
	mulsd	%xmm5, %xmm6
	movsd	%xmm6, 0(%ebx)
	jmp	.L440
.L455:
	leal	__stringlit_2, %ebx
	leal	__stringlit_1, %ecx
	movl	$145, %esi
	xorl	%eax, %eax
	movl	%ebx, 0(%esp)
	movl	%ecx, 4(%esp)
	movl	%esi, 8(%esp)
	movl	%eax, 12(%esp)
	call	__assert_fail
	jmp	.L440
.L454:
	movsd	0(%ecx), %xmm1
	movsd	16(%ecx), %xmm6
	xorl	%eax, %eax
	movl	%eax, 0(%edi)
	movsd	%xmm1, 0(%esi)
	movsd	%xmm6, 0(%ebx)
	jmp	.L440
.L453:
	movsd	0(%ecx), %xmm1
	movsd	8(%ecx), %xmm5
	movsd	16(%ecx), %xmm0
	movsd	%xmm0, 40(%esp)
	movsd	%xmm5, 64(%esp)
	movsd	%xmm1, 48(%esp)
	movsd	64(%esp), %xmm2
	mulsd	%xmm2, %xmm2
	movsd	%xmm2, 56(%esp)
	xorl	%ebp, %ebp
	movsd	.L461, %xmm2 # 1
	movsd	64(%esp), %xmm7
	subsd	%xmm7, %xmm2
	movapd	%xmm2, %xmm3
	mulsd	%xmm2, %xmm3
	movsd	56(%esp), %xmm0
	comisd	%xmm3, %xmm0
	jbe	.L462
	movsd	%xmm3, 56(%esp)
	movl	$1, %ebp
.L462:
	movsd	48(%esp), %xmm0
	mulsd	%xmm0, %xmm0
	movsd	40(%esp), %xmm3
	mulsd	%xmm3, %xmm3
	addsd	%xmm3, %xmm0
	movsd	.L463, %xmm2 # 1
	subsd	%xmm2, %xmm0
	movsd	%xmm0, 0(%esp)
	call	fabs
	fstpl	72(%esp)
	movsd	72(%esp), %xmm2
	movsd	56(%esp), %xmm4
	comisd	%xmm2, %xmm4
	jbe	.L464
	movl	$2, %ebp
.L464:
	movl	$2, %edx
	subl	%ebp, %edx
	movl	%edx, 0(%edi)
	cmpl	$2, %ebp
	jge	.L465
	movsd	.L466, %xmm4 # 1
	movsd	48(%esp), %xmm2
	addsd	%xmm4, %xmm2
	movsd	.L467, %xmm6 # 0.5
	mulsd	%xmm6, %xmm2
	movsd	%xmm2, 0(%esi)
	movsd	40(%esp), %xmm5
	addsd	%xmm4, %xmm5
	mulsd	%xmm6, %xmm5
	movsd	%xmm5, 0(%ebx)
	jmp	.L440
.L465:
	movsd	48(%esp), %xmm0
	movsd	%xmm0, 0(%esp)
	movsd	40(%esp), %xmm0
	movsd	%xmm0, 8(%esp)
	call	atan2
	fstpl	40(%esp)
	movsd	40(%esp), %xmm0
	movsd	.L468, %xmm5 # 1
	movsd	.L469, %xmm3 # 0.159154943091895346
	mulsd	%xmm3, %xmm0
	xorpd	%xmm1, %xmm1
	comisd	%xmm0, %xmm1
	jbe	.L470
	addsd	%xmm5, %xmm0
.L470:
	movsd	%xmm0, 0(%esi)
	movsd	64(%esp), %xmm3
	movsd	%xmm3, 0(%ebx)
.L440:
	movl	20(%esp), %ebx
	movl	24(%esp), %esi
	movl	28(%esp), %edi
	movl	32(%esp), %ebp
	addl	$132, %esp
	ret
	.cfi_endproc
	.type	surface_coords, @function
	.size	surface_coords, . - surface_coords
	.section	.rodata.cst8,"aM",@progbits,8
	.align	8
.L469:	.quad	0x3fc45f306dc9c883
.L468:	.quad	0x3ff0000000000000
.L467:	.quad	0x3fe0000000000000
.L466:	.quad	0x3ff0000000000000
.L463:	.quad	0x3ff0000000000000
.L461:	.quad	0x3ff0000000000000
.L460:	.quad	0x3fe0000000000000
.L459:	.quad	0x3ff0000000000000
.L457:	.quad	0x3fc45f306dc9c883
.L456:	.quad	0x3ff0000000000000
.L446:	.quad	0x3ff0000000000000
.L445:	.quad	0x3ff0000000000000
.L444:	.quad	0x3ff0000000000000
.L442:	.quad	0x3fc45f306dc9c883
.L441:	.quad	0x3ff0000000000000
.L439:	.quad	0x3fe0000000000000
.L437:	.quad	0x3ff0000000000000
